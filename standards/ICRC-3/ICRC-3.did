type Value = variant {
    Blob : blob;
    Text : text;
    Nat : nat; // do we need this or can we just use Int?
    Int : int;
    Array : vec Value;
    Map : vec record { text; Value };
};

type GetBlocksArgs = vec record { start : nat; length : nat };

type GetBlocksResult = record {
    // Total number of blocks in the
    // block log
    log_length : nat;

    blocks : vec record { id : nat; block: Value };

    archived_blocks : vec record {
        args : GetBlocksArgs;
        callback : GetBlocksFn;
    };
};

type DataCertificate = record {
  // See https://internetcomputer.org/docs/current/references/ic-interface-spec#certification
  certificate : blob;

  // CBOR encoded hash_tree
  hash_tree : blob;
};

service : {
  icrc3_get_tip_certificate : () -> (opt DataCertificate) query;
  icrc3_get_blocks : (GetBlocksArgs) -> (GetBlocksResult) query;
};